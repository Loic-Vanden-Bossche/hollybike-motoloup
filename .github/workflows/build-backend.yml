name: Backend CI/CD

on:
  workflow_call:
    inputs:
      externall_call:
        description: 'To distinguish workflow_call from regular events'
        type: boolean
        required: false
        default: true
      version:
        description: 'Version of the release'
        type: string
        required: true

  pull_request:
    branches:
      - main
    paths:
      - 'packages/backend/**'
      - '.github/workflows/build-backend.yml'

env:
  CI: true
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-backend
  JAVA_VERSION: 21

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/backend

    permissions:
      contents: read
      packages: write

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM (Java ${{ env.JAVA_VERSION }})
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          cache: 'gradle'

      - name: Read rights to gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test -Pis_on_premise=true

      - name: Run native compile
        if: ${{ inputs.externall_call }}
        run: ./gradlew nativeCompile -Pimage_name=hollybike_server

      - name: Log in to the Container registry
        if: ${{ inputs.externall_call }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ inputs.externall_call }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            ${{ inputs.version }}

      - name: Build and push
        if: ${{ inputs.externall_call }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: packages/backend
          build-args: |
            EXECUTABLE=hollybike_server