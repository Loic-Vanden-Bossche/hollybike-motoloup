name: Frontend CI

on:
  workflow_call:
    inputs:
      externall_call:
        description: 'To distinguish workflow_call from regular events'
        type: boolean
        required: false
        default: true
      version:
        description: 'Version of the release'
        type: string
        required: true
    secrets:
      MAPBOX_PUBLIC_ACCESS_TOKEN:
        description: 'Mapbox public token'
        required: true
    outputs:
      image:
        description: "Tagged image to deploy"
        value: ${{ jobs.build.outputs.image }}

  pull_request:
    branches:
      - main
    paths:
      - 'packages/frontend/**'
      - '.github/workflows/build-frontend.yml'

env:
  CI: true
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/frontend

    permissions:
      contents: read
      packages: write

    services:
      docker:
        image: docker:dind
        options: --privileged

    outputs:
      image: ${{ steps.extract-tag.outputs.second-tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Run linter
        run: bun run lint

      - name: Try building application
        env:
          VITE_MAPBOX_KEY: ${{ secrets.MAPBOX_PUBLIC_ACCESS_TOKEN }}
        run: bun run build

      - name: Log in to the Container registry
        if: ${{ inputs.externall_call }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ inputs.externall_call }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            ${{ inputs.version }}

      - name: Build and push
        if: ${{ inputs.externall_call }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: packages/frontend

      - name: Upload artifacts
        if: ${{ inputs.externall_call }}
        uses: actions/upload-artifact@v4
        with:
          name: HollyBike-Frontend-${{ inputs.version }}
          path: packages/frontend/dist
          retention-days: 1

      - name: Extract second tag (sha)
        if: ${{ inputs.externall_call }}
        id: extract-tag
        run: |
          TAGS=(${{ steps.meta.outputs.tags }})
          echo "second-tag=${TAGS[1]}" >> $GITHUB_OUTPUT